//Script de creación de tablas (DDL)
CREATE DATABASE IF NOT EXISTS bankingBusiness_db;
USE bankingBusiness_db;

-- Tabla Cliente
CREATE TABLE Cliente (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    dni VARCHAR(20) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL
);

-- Tabla CuentaBancaria
CREATE TABLE CuentaBancaria (
    id INT AUTO_INCREMENT PRIMARY KEY,
    numeroCuenta VARCHAR(50) NOT NULL UNIQUE,
    saldo DECIMAL(12,2) NOT NULL DEFAULT 0.0,
    tipo ENUM('SAVINGS', 'CURRENT') NOT NULL,
    cliente_id INT NOT NULL,
    FOREIGN KEY (cliente_id) REFERENCES Cliente(id)
);

//Insertar registros (DML)
-- Insertar clientes
INSERT INTO Cliente (nombre, apellido, dni, email)
VALUES
('Anais', 'Bustamante', '71205648', 'anais@mail.com'),
('Alexis', 'Ramirez', '52487963', 'carlos@mail.com');

-- Insertar cuentas
INSERT INTO CuentaBancaria (numeroCuenta, saldo, tipo, cliente_id)
VALUES
('SAVING001', 1000.00, 'SAVINGS', 1),
('CURRENT001', 500.00, 'CURRENT', 1),
('SAVING002', 2000.00, 'SAVINGS', 2);


//Consultar registros (DQL)
-- Consultar todos los clientes
SELECT * FROM Cliente;

-- Consultar todas las cuentas bancarias
SELECT * FROM CuentaBancaria;

-- Consultar las cuentas de un cliente específico
SELECT c.nombre, c.apellido, cb.numeroCuenta, cb.saldo, cb.tipo
FROM Cliente c
JOIN CuentaBancaria cb ON c.id = cb.cliente_id
WHERE c.dni = '12345678';

//Actualizar registros (DML)
-- Actualizar saldo de una cuenta
UPDATE CuentaBancaria
SET saldo = saldo + 500
WHERE numeroCuenta = 'SAVING001';

-- Cambiar email de un cliente
UPDATE Cliente
SET email = 'anaisbusta@mail.com'
WHERE dni = '71205648';
